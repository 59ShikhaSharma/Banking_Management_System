name: Deploy JAR to AWS EC2

on:
  push:
    branches:
      - main  # Change this to the branch you want to trigger the deployment on

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: List files for debugging
      run: ls -la  # List files in the root directory to confirm the JAR file's presence

    - name: Upload JAR file
      uses: actions/upload-artifact@v3
      with:
        name: jar-file
        path: BankingManagementSystemMongo.jar  # Correct path to your JAR file

    - name: List uploaded artifacts
      run: |
        mkdir -p artifacts
        tar -xf $GITHUB_WORKSPACE/BankingManagementSystemMongo.jar -C artifacts
        ls -la artifacts

    - name: Login to EC2 and Deploy JAR
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        # Save the SSH private key to a file
        echo "$SSH_PRIVATE_KEY" > id_rsa
        chmod 600 id_rsa

        # Check if the JAR file exists locally
        if [ ! -f BankingManagementSystemMongo.jar ]; then
          echo "JAR file not found!"
          exit 1
        fi
        
        # Copy the JAR file to the EC2 instance
        scp -i id_rsa -o StrictHostKeyChecking=no BankingManagementSystemMongo.jar ${EC2_USER}@${EC2_HOST}:/home/${EC2_USER}/
        
        # SSH into the EC2 instance to install Java 18 and run the JAR file
        ssh -i id_rsa -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} << 'EOF'
          # Install Java 18 if not installed
          if ! command -v java &> /dev/null || [[ "$(java -version 2>&1 | head -n 1)" != *"18."* ]]; then
              echo "Java 18 not found, installing..."
              sudo apt-get update
              sudo apt-get install -y openjdk-18-jdk
          else
              echo "Java 18 is already installed"
          fi

          # Run the JAR file
          java -jar /home/${EC2_USER}/BankingManagementSystemMongo.jar
        EOF
        
        # Clean up the SSH key file
        rm id_rsa
